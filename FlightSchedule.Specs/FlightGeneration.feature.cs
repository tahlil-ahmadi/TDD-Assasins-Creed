// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.0.0.0
//      SpecFlow Generator Version:3.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace FlightSchedule.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class FlightGenerationFeature : Xunit.IClassFixture<FlightGenerationFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "FlightGeneration.feature"
#line hidden
        
        public FlightGenerationFeature(FlightGenerationFeature.FixtureData fixtureData, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "FlightGeneration", "\tIn order to generate flights easily and time-efficient\r\n\tAs a flight agency mana" +
                    "ger\r\n\tI want to generate flights from charter schedule in a batch manner", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute(DisplayName="Generate flights")]
        [Xunit.TraitAttribute("FeatureTitle", "FlightGeneration")]
        [Xunit.TraitAttribute("Description", "Generate flights")]
        public virtual void GenerateFlights()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Generate flights", null, ((string[])(null)));
#line 6
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
 testRunner.Given("\'Ali\' is a flight agency manager", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "FlightNo",
                        "Seats",
                        "Airplane",
                        "Airline"});
            table3.AddRow(new string[] {
                        "WK-550",
                        "120",
                        "Airbus-320",
                        "Mahan"});
#line 8
 testRunner.And("He has defined a charter schedule as following", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "DayOfWeek",
                        "Origin",
                        "Destination",
                        "DepartureTime",
                        "ArriveDate"});
            table4.AddRow(new string[] {
                        "Monday",
                        "IKA",
                        "DXB",
                        "08:00",
                        "09:30"});
            table4.AddRow(new string[] {
                        "Wednesday",
                        "DXB",
                        "IKA",
                        "17:00",
                        "18:30"});
#line 11
 testRunner.And("He has assigned the following timetable to it", ((string)(null)), table4, "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Begin",
                        "End"});
            table5.AddRow(new string[] {
                        "2020-01-01 Wednesday",
                        "2020-01-10 Friday"});
#line 15
 testRunner.When("he try to generate flights in range", ((string)(null)), table5, "When ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "FlightNo",
                        "Departure",
                        "Arrive",
                        "Origin",
                        "Destination",
                        "Seats"});
            table6.AddRow(new string[] {
                        "WK-550",
                        "2020-01-01 17:00",
                        "2020-01-01 18:30",
                        "DXB",
                        "IKA",
                        "120"});
            table6.AddRow(new string[] {
                        "WK-550",
                        "2020-01-06 08:00",
                        "2020-01-06 09:30",
                        "IKA",
                        "DXB",
                        "120"});
            table6.AddRow(new string[] {
                        "WK-550",
                        "2020-01-08 17:00",
                        "2020-01-08 18:30",
                        "DXB",
                        "IKA",
                        "120"});
#line 18
 testRunner.Then("the following flights should be generated", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.0.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                FlightGenerationFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                FlightGenerationFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
